#include <fases/criadores/CriadorBosque.h>

using namespace Fases;


char mFase1[22][41] = {//9 A //8 D -- //6 f //5 p
    {'*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*'},
    {'*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*'},
    {'*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*'},
    {'*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','D','*','*','*','*','*','*','*','*','*','*','*','*','*','*'},
    {'*','*','D','*','*','*','D','*','*','*','*','*','*','*','*','*','D','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*'},
    {'*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','A','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*'},
    {'*','*','*','*','*','*','*','*','*','*','*','A','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','A','*','*','*','*','*','*','*','*'},
    {'*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','#','#','#','#','*','*','*','*','*','*','*','f','*','*','*','*','*','*','*','*','*'},
    {'*','*','*','*','*','*','*','*','*','*','#','#','#','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','#','#','#','*','*','*','*','*','*','*'},
    {'*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*'},
    {'*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*'},
    {'*','*','*','A','*','*','*','*','*','*','*','*','*','*','*','*','A','*','*','*','*','*','*','*','*','*','*','*','*','A','*','*','*','*','*','*','*','*','*','A','*'},
    {'*','*','*','*','*','*','*','*','*','*','*','D','*','*','*','*','*','*','f','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','D','*','*','*','f','*','*'},
    {'*','*','#','#','#','*','*','*','*','*','*','*','*','*','*','#','#','#','#','#','*','*','*','*','*','*','*','*','#','#','#','#','*','*','*','*','*','*','#','#','#'},
    {'*','*','*','*','*','*','*','A','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*'},
    {'*','*','*','*','*','*','*','*','f','*','*','*','*','*','*','D','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','#','#','*','*','*','*'},
    {'*','*','*','*','*','*','#','#','#','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*'},
    {'*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*'},
    {'*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','p','*','*','*','*','*','*'},
    {'*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','*','f','*','*','*','*','*','*','*','*','*','*','*','#','#','#','#','*','*','*','*'},
    {'*','*','*','*','*','p','*','*','*','*','*','*','*','A','*','*','*','*','*','*','*','#','#','*','*','*','*','*','*','*','*','*','#','#','#','#','#','*','*','*','*'},
    {'*','*','*','*','*','#','#','#','*','p','*','*','*','*','*','*','*','p','*','*','#','#','#','#','p','*','*','*','D','*','f','#','#','#','#','#','#','*','*','*','*'}
};



CriadorBosque::CriadorBosque(){}

CriadorBosque::~CriadorBosque(){}

#define AtMIN 5
#define AtMAX 9

#define DMIN 6
#define DMAX 8
void CriadorBosque::criarInimigos(Listas::ListaEntidade<Entidades::Inimigo>* li){
    int n = rand()% (DMAX-DMIN)+DMIN;
    int *v =  (int*) malloc(n*sizeof(int));
    preencher(v,DMAX,n);
    criarRosquinhas(li,mFase1,v,n);
    free(v);
    
    n = rand()% (AtMAX-AtMIN)+AtMIN;
    v =  (int*) malloc(n*sizeof(int));
    preencher(v,AtMAX,n);
    criarCookies(li,mFase1,v,n);
    free(v);
}

#define FioDentalMAX 6
#define FioDentalMIN 3

#define EpMAX 5
#define EpMIN 3
void CriadorBosque::criarObstaculos(Listas::ListaEntidade<Entidades::Obstaculo>* lo){
    criarLimites(lo,mFase1);

    int n = rand()% (FioDentalMAX-FioDentalMIN)+FioDentalMIN;
    int *v =  (int*) malloc(n*sizeof(int));
    preencher(v,FioDentalMAX,n);
    criarFioDental(lo,mFase1,v,n);
    free(v);

    n = rand()% (EpMAX-EpMIN)+EpMIN;
    v =  (int*) malloc(n*sizeof(int));
    preencher(v,EpMAX,n);
    criarPirulitos(lo,mFase1,v,n);
    free(v);
}
